name: Stockfish
on:
  workflow_dispatch:
  workflow_call:
jobs:
  Stockfish:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      COMPILER: ${{ matrix.config.compiler }}
      COMP: ${{ matrix.config.comp }}
      CXXFLAGS: 
    strategy:
      matrix:
        config:
          - name: "Ubuntu 22.04 NDK armv8"
            os: ubuntu-22.04
            compiler: aarch64-linux-android21-clang++
            comp: ndk
            run_armv8_tests: true
            shell: 'bash {0}'
          - name: "Ubuntu 22.04 NDK armv7"
            os: ubuntu-22.04
            compiler: armv7a-linux-androideabi19-clang++
            comp: ndk
            run_armv7_tests: true
            shell: 'bash {0}'

    defaults:
      run:
        working-directory: src
        shell: ${{ matrix.config.shell }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download required linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install expect valgrind g++-multilib qemu-user

      - name: Download the used network from the fishtest framework
        run: make net

      - name: Extract the bench number from the commit history
        run: |
          git log HEAD | grep "\b[Bb]ench[ :]\+[0-9]\{7\}" | head -n 1 | sed "s/[^0-9]*\([0-9]*\).*/\1/g" > git_sig
          [ -s git_sig ] && echo "benchref=$(cat git_sig)" >> $GITHUB_ENV && echo "Reference bench:" $(cat git_sig) || echo "No bench found"

      - name: Check compiler
        run: |
          export PATH=$PATH:$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin
          $COMPILER -v

      - name: Test help target
        run: make help

      # armv8 build

      - name: Test armv8 build
        if: ${{ matrix.config.run_armv8_tests }}
        run: |
          export PATH=$ANDROID_NDK_HOME:$PATH
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH

          cp nn-*.nnue ../jni
          cd ../jni
          cp Application_v8.mk Application.mk
          ndk-build
          cd ../libs/arm64-v8a
          cp Stockfish ../../src/SFnps_armv8
          cd ../../src/

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.config.run_armv8_tests }}
        with:
          name: SFnps-armv8
          path: /home/runner/work/StockfishNPS/StockfishNPS/src/SFnps_armv8
          
      # armv7 build

      - name: Test armv7 build
        if: ${{ matrix.config.run_armv7_tests }}
        run: |
          export PATH=$ANDROID_NDK_HOME:$PATH
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
    
          cp nn-*.nnue ../jni
          cd ../jni
          cp Application_v7.mk Application.mk
          ndk-build
          cd ../libs/armeabi-v7a
          cp Stockfish ../../src/SFnps_armv7
          cd ../../src/
          
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.config.run_armv7_tests }}
        with:
          name: SFnps-armv7
          path: /home/runner/work/StockfishNPS/StockfishNPS/src/SFnps_armv7
